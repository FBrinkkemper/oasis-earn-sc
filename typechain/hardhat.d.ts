/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "AaveBorrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveBorrow__factory>;
    getContractFactory(
      name: "AaveDeposit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveDeposit__factory>;
    getContractFactory(
      name: "AavePayback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AavePayback__factory>;
    getContractFactory(
      name: "AaveWithdraw",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveWithdraw__factory>;
    getContractFactory(
      name: "AaveV3Borrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV3Borrow__factory>;
    getContractFactory(
      name: "AaveV3Deposit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV3Deposit__factory>;
    getContractFactory(
      name: "AaveV3Payback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV3Payback__factory>;
    getContractFactory(
      name: "AaveV3SetEMode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV3SetEMode__factory>;
    getContractFactory(
      name: "AaveV3Withdraw",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV3Withdraw__factory>;
    getContractFactory(
      name: "AaveV3L2Borrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV3L2Borrow__factory>;
    getContractFactory(
      name: "IL2Encoder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2Encoder__factory>;
    getContractFactory(
      name: "IL2Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2Pool__factory>;
    getContractFactory(
      name: "AaveV3L2Deposit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV3L2Deposit__factory>;
    getContractFactory(
      name: "IL2Encoder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2Encoder__factory>;
    getContractFactory(
      name: "IL2Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2Pool__factory>;
    getContractFactory(
      name: "AaveV3L2Payback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV3L2Payback__factory>;
    getContractFactory(
      name: "IL2Encoder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2Encoder__factory>;
    getContractFactory(
      name: "IL2Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2Pool__factory>;
    getContractFactory(
      name: "AaveV3L2Withdraw",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV3L2Withdraw__factory>;
    getContractFactory(
      name: "IL2Encoder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2Encoder__factory>;
    getContractFactory(
      name: "IL2Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2Pool__factory>;
    getContractFactory(
      name: "Executable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Executable__factory>;
    getContractFactory(
      name: "PositionCreated",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PositionCreated__factory>;
    getContractFactory(
      name: "PullToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PullToken__factory>;
    getContractFactory(
      name: "ReturnFunds",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReturnFunds__factory>;
    getContractFactory(
      name: "SendToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SendToken__factory>;
    getContractFactory(
      name: "SetApproval",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SetApproval__factory>;
    getContractFactory(
      name: "SwapAction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SwapAction__factory>;
    getContractFactory(
      name: "TakeFlashloan",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TakeFlashloan__factory>;
    getContractFactory(
      name: "UnwrapEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnwrapEth__factory>;
    getContractFactory(
      name: "WrapEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WrapEth__factory>;
    getContractFactory(
      name: "CdpAllow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CdpAllow__factory>;
    getContractFactory(
      name: "MakerDeposit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MakerDeposit__factory>;
    getContractFactory(
      name: "MakerGenerate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MakerGenerate__factory>;
    getContractFactory(
      name: "MakerOpenVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MakerOpenVault__factory>;
    getContractFactory(
      name: "MakerPayback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MakerPayback__factory>;
    getContractFactory(
      name: "MakerWithdraw",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MakerWithdraw__factory>;
    getContractFactory(
      name: "OperationExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperationExecutor__factory>;
    getContractFactory(
      name: "OperationsRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperationsRegistry__factory>;
    getContractFactory(
      name: "OperationStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperationStorage__factory>;
    getContractFactory(
      name: "ServiceRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ServiceRegistry__factory>;
    getContractFactory(
      name: "ChainLogView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainLogView__factory>;
    getContractFactory(
      name: "McdView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.McdView__factory>;
    getContractFactory(
      name: "IAToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAToken__factory>;
    getContractFactory(
      name: "ILendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPool__factory>;
    getContractFactory(
      name: "ILendingPoolAddressesProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPoolAddressesProvider__factory>;
    getContractFactory(
      name: "IScaledBalanceToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IScaledBalanceToken__factory>;
    getContractFactory(
      name: "IVariableDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVariableDebtToken__factory>;
    getContractFactory(
      name: "IWETHGateway",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETHGateway__factory>;
    getContractFactory(
      name: "IPoolAddressesProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolAddressesProvider__factory>;
    getContractFactory(
      name: "IPoolV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolV3__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: "IAccountGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccountGuard__factory>;
    getContractFactory(
      name: "IAccountImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccountImplementation__factory>;
    getContractFactory(
      name: "IDSProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDSProxy__factory>;
    getContractFactory(
      name: "IFlashLoanRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanRecipient__factory>;
    getContractFactory(
      name: "IERC3156FlashBorrower",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3156FlashBorrower__factory>;
    getContractFactory(
      name: "IERC3156FlashLender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3156FlashLender__factory>;
    getContractFactory(
      name: "IExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExchange__factory>;
    getContractFactory(
      name: "ICat",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICat__factory>;
    getContractFactory(
      name: "IChainLog",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainLog__factory>;
    getContractFactory(
      name: "IDaiJoin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDaiJoin__factory>;
    getContractFactory(
      name: "IGem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGem__factory>;
    getContractFactory(
      name: "IGetCdps",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGetCdps__factory>;
    getContractFactory(
      name: "IJoin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJoin__factory>;
    getContractFactory(
      name: "IJug",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJug__factory>;
    getContractFactory(
      name: "IManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IManager__factory>;
    getContractFactory(
      name: "IOsm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOsm__factory>;
    getContractFactory(
      name: "IPipInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPipInterface__factory>;
    getContractFactory(
      name: "ISpotter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISpotter__factory>;
    getContractFactory(
      name: "IVat",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVat__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "AccountFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccountFactory__factory>;
    getContractFactory(
      name: "AccountGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccountGuard__factory>;
    getContractFactory(
      name: "AccountImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccountImplementation__factory>;
    getContractFactory(
      name: "DSAuth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSAuth__factory>;
    getContractFactory(
      name: "DSAuthEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSAuthEvents__factory>;
    getContractFactory(
      name: "DSAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSAuthority__factory>;
    getContractFactory(
      name: "DSGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSGuard__factory>;
    getContractFactory(
      name: "DSGuardFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSGuardFactory__factory>;
    getContractFactory(
      name: "DSNote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSNote__factory>;
    getContractFactory(
      name: "DSProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSProxy__factory>;
    getContractFactory(
      name: "DSProxyCache",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSProxyCache__factory>;
    getContractFactory(
      name: "DSProxyFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSProxyFactory__factory>;
    getContractFactory(
      name: "DSProxyRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSProxyRegistry__factory>;
    getContractFactory(
      name: "ProxyPermission",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyPermission__factory>;
    getContractFactory(
      name: "MathUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MathUtils__factory>;
    getContractFactory(
      name: "Swap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Swap__factory>;
    getContractFactory(
      name: "USwap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.USwap__factory>;
    getContractFactory(
      name: "DummyAction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyAction__factory>;
    getContractFactory(
      name: "DummyAutomation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyAutomation__factory>;
    getContractFactory(
      name: "DummyCommand",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyCommand__factory>;
    getContractFactory(
      name: "DummyExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyExchange__factory>;
    getContractFactory(
      name: "DummyOptionalAction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyOptionalAction__factory>;
    getContractFactory(
      name: "DummySwap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummySwap__factory>;
    getContractFactory(
      name: "SuicideBomb",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SuicideBomb__factory>;
    getContractFactory(
      name: "AjnaPoolERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AjnaPoolERC20__factory>;
    getContractFactory(
      name: "AjnaProxyActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AjnaProxyActions__factory>;
    getContractFactory(
      name: "PoolInfoUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolInfoUtils__factory>;
    getContractFactory(
      name: "LendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingPool__factory>;
    getContractFactory(
      name: "PriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracle__factory>;
    getContractFactory(
      name: "ProtocolDataProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProtocolDataProvider__factory>;
    getContractFactory(
      name: "AaveOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveOracle__factory>;
    getContractFactory(
      name: "AaveProtocolDataProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveProtocolDataProvider__factory>;
    getContractFactory(
      name: "Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pool__factory>;
    getContractFactory(
      name: "AjnaPoolERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AjnaPoolERC20__factory>;
    getContractFactory(
      name: "AjnaProxyActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AjnaProxyActions__factory>;
    getContractFactory(
      name: "PoolInfoUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolInfoUtils__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "AaveBorrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveBorrow>;
    getContractAt(
      name: "AaveDeposit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveDeposit>;
    getContractAt(
      name: "AavePayback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AavePayback>;
    getContractAt(
      name: "AaveWithdraw",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveWithdraw>;
    getContractAt(
      name: "AaveV3Borrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV3Borrow>;
    getContractAt(
      name: "AaveV3Deposit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV3Deposit>;
    getContractAt(
      name: "AaveV3Payback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV3Payback>;
    getContractAt(
      name: "AaveV3SetEMode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV3SetEMode>;
    getContractAt(
      name: "AaveV3Withdraw",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV3Withdraw>;
    getContractAt(
      name: "AaveV3L2Borrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV3L2Borrow>;
    getContractAt(
      name: "IL2Encoder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2Encoder>;
    getContractAt(
      name: "IL2Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2Pool>;
    getContractAt(
      name: "AaveV3L2Deposit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV3L2Deposit>;
    getContractAt(
      name: "IL2Encoder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2Encoder>;
    getContractAt(
      name: "IL2Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2Pool>;
    getContractAt(
      name: "AaveV3L2Payback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV3L2Payback>;
    getContractAt(
      name: "IL2Encoder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2Encoder>;
    getContractAt(
      name: "IL2Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2Pool>;
    getContractAt(
      name: "AaveV3L2Withdraw",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV3L2Withdraw>;
    getContractAt(
      name: "IL2Encoder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2Encoder>;
    getContractAt(
      name: "IL2Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2Pool>;
    getContractAt(
      name: "Executable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Executable>;
    getContractAt(
      name: "PositionCreated",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PositionCreated>;
    getContractAt(
      name: "PullToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PullToken>;
    getContractAt(
      name: "ReturnFunds",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReturnFunds>;
    getContractAt(
      name: "SendToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SendToken>;
    getContractAt(
      name: "SetApproval",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SetApproval>;
    getContractAt(
      name: "SwapAction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SwapAction>;
    getContractAt(
      name: "TakeFlashloan",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TakeFlashloan>;
    getContractAt(
      name: "UnwrapEth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnwrapEth>;
    getContractAt(
      name: "WrapEth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WrapEth>;
    getContractAt(
      name: "CdpAllow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CdpAllow>;
    getContractAt(
      name: "MakerDeposit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MakerDeposit>;
    getContractAt(
      name: "MakerGenerate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MakerGenerate>;
    getContractAt(
      name: "MakerOpenVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MakerOpenVault>;
    getContractAt(
      name: "MakerPayback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MakerPayback>;
    getContractAt(
      name: "MakerWithdraw",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MakerWithdraw>;
    getContractAt(
      name: "OperationExecutor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperationExecutor>;
    getContractAt(
      name: "OperationsRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperationsRegistry>;
    getContractAt(
      name: "OperationStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperationStorage>;
    getContractAt(
      name: "ServiceRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ServiceRegistry>;
    getContractAt(
      name: "ChainLogView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainLogView>;
    getContractAt(
      name: "McdView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.McdView>;
    getContractAt(
      name: "IAToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAToken>;
    getContractAt(
      name: "ILendingPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILendingPool>;
    getContractAt(
      name: "ILendingPoolAddressesProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILendingPoolAddressesProvider>;
    getContractAt(
      name: "IScaledBalanceToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IScaledBalanceToken>;
    getContractAt(
      name: "IVariableDebtToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVariableDebtToken>;
    getContractAt(
      name: "IWETHGateway",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETHGateway>;
    getContractAt(
      name: "IPoolAddressesProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolAddressesProvider>;
    getContractAt(
      name: "IPoolV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolV3>;
    getContractAt(
      name: "IVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVault>;
    getContractAt(
      name: "ISwapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwapRouter>;
    getContractAt(
      name: "IAccountGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccountGuard>;
    getContractAt(
      name: "IAccountImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccountImplementation>;
    getContractAt(
      name: "IDSProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDSProxy>;
    getContractAt(
      name: "IFlashLoanRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLoanRecipient>;
    getContractAt(
      name: "IERC3156FlashBorrower",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3156FlashBorrower>;
    getContractAt(
      name: "IERC3156FlashLender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3156FlashLender>;
    getContractAt(
      name: "IExchange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExchange>;
    getContractAt(
      name: "ICat",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICat>;
    getContractAt(
      name: "IChainLog",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainLog>;
    getContractAt(
      name: "IDaiJoin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDaiJoin>;
    getContractAt(
      name: "IGem",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGem>;
    getContractAt(
      name: "IGetCdps",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGetCdps>;
    getContractAt(
      name: "IJoin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJoin>;
    getContractAt(
      name: "IJug",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJug>;
    getContractAt(
      name: "IManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IManager>;
    getContractAt(
      name: "IOsm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOsm>;
    getContractAt(
      name: "IPipInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPipInterface>;
    getContractAt(
      name: "ISpotter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISpotter>;
    getContractAt(
      name: "IVat",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVat>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "AccountFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccountFactory>;
    getContractAt(
      name: "AccountGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccountGuard>;
    getContractAt(
      name: "AccountImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccountImplementation>;
    getContractAt(
      name: "DSAuth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSAuth>;
    getContractAt(
      name: "DSAuthEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSAuthEvents>;
    getContractAt(
      name: "DSAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSAuthority>;
    getContractAt(
      name: "DSGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSGuard>;
    getContractAt(
      name: "DSGuardFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSGuardFactory>;
    getContractAt(
      name: "DSNote",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSNote>;
    getContractAt(
      name: "DSProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSProxy>;
    getContractAt(
      name: "DSProxyCache",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSProxyCache>;
    getContractAt(
      name: "DSProxyFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSProxyFactory>;
    getContractAt(
      name: "DSProxyRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSProxyRegistry>;
    getContractAt(
      name: "ProxyPermission",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyPermission>;
    getContractAt(
      name: "MathUtils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MathUtils>;
    getContractAt(
      name: "Swap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Swap>;
    getContractAt(
      name: "USwap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.USwap>;
    getContractAt(
      name: "DummyAction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyAction>;
    getContractAt(
      name: "DummyAutomation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyAutomation>;
    getContractAt(
      name: "DummyCommand",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyCommand>;
    getContractAt(
      name: "DummyExchange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyExchange>;
    getContractAt(
      name: "DummyOptionalAction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyOptionalAction>;
    getContractAt(
      name: "DummySwap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummySwap>;
    getContractAt(
      name: "SuicideBomb",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SuicideBomb>;
    getContractAt(
      name: "AjnaPoolERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AjnaPoolERC20>;
    getContractAt(
      name: "AjnaProxyActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AjnaProxyActions>;
    getContractAt(
      name: "PoolInfoUtils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolInfoUtils>;
    getContractAt(
      name: "LendingPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LendingPool>;
    getContractAt(
      name: "PriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceOracle>;
    getContractAt(
      name: "ProtocolDataProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProtocolDataProvider>;
    getContractAt(
      name: "AaveOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveOracle>;
    getContractAt(
      name: "AaveProtocolDataProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveProtocolDataProvider>;
    getContractAt(
      name: "Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pool>;
    getContractAt(
      name: "AjnaPoolERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AjnaPoolERC20>;
    getContractAt(
      name: "AjnaProxyActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AjnaProxyActions>;
    getContractAt(
      name: "PoolInfoUtils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolInfoUtils>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
