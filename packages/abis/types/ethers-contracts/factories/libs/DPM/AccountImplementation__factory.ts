/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  AccountImplementation,
  AccountImplementationInterface,
} from "../../../libs/DPM/AccountImplementation";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract AccountGuard",
        name: "_guard",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "guard",
    outputs: [
      {
        internalType: "contract AccountGuard",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class AccountImplementation__factory {
  static readonly abi = _abi;
  static createInterface(): AccountImplementationInterface {
    return new Interface(_abi) as AccountImplementationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccountImplementation {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AccountImplementation;
  }
}
