/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  UseRegistry,
  UseRegistryInterface,
} from "../../../../system/contracts/libs/UseRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ServiceRegistry",
        name: "registry_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
] as const;

export class UseRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): UseRegistryInterface {
    return new utils.Interface(_abi) as UseRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UseRegistry {
    return new Contract(address, _abi, signerOrProvider) as UseRegistry;
  }
}
