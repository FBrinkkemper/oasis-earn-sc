/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  DSGuardEvents,
  DSGuardEventsInterface,
} from "../../../../../../system/contracts/libs/DS/DSGuard.sol/DSGuardEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "src",
        type: "bytes32",
      },
      {
        indexed: true,
        name: "dst",
        type: "bytes32",
      },
      {
        indexed: true,
        name: "sig",
        type: "bytes32",
      },
    ],
    name: "LogPermit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "src",
        type: "bytes32",
      },
      {
        indexed: true,
        name: "dst",
        type: "bytes32",
      },
      {
        indexed: true,
        name: "sig",
        type: "bytes32",
      },
    ],
    name: "LogForbid",
    type: "event",
  },
] as const;

export class DSGuardEvents__factory {
  static readonly abi = _abi;
  static createInterface(): DSGuardEventsInterface {
    return new utils.Interface(_abi) as DSGuardEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DSGuardEvents {
    return new Contract(address, _abi, signerOrProvider) as DSGuardEvents;
  }
}
