/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  DSAuthEvents,
  DSAuthEventsInterface,
} from "../../../../../../system/contracts/libs/DS/DSAuth.sol/DSAuthEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "LogSetAuthority",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "LogSetOwner",
    type: "event",
  },
] as const;

export class DSAuthEvents__factory {
  static readonly abi = _abi;
  static createInterface(): DSAuthEventsInterface {
    return new Interface(_abi) as DSAuthEventsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DSAuthEvents {
    return new Contract(address, _abi, runner) as unknown as DSAuthEvents;
  }
}
