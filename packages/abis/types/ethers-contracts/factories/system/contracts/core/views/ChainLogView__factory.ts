/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ChainLogView,
  ChainLogViewInterface,
} from "../../../../../system/contracts/core/views/ChainLogView";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_chainlogAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "bytes32ToString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "chainlogAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ilkHash",
        type: "bytes32",
      },
    ],
    name: "getIlkJoinAddressByHash",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "ilkName",
        type: "string",
      },
    ],
    name: "getIlkJoinAddressByName",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "serviceName",
        type: "string",
      },
    ],
    name: "getServiceAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ChainLogView__factory {
  static readonly abi = _abi;
  static createInterface(): ChainLogViewInterface {
    return new utils.Interface(_abi) as ChainLogViewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainLogView {
    return new Contract(address, _abi, signerOrProvider) as ChainLogView;
  }
}
