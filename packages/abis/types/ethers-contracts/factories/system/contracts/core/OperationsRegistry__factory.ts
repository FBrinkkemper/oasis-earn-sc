/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  OperationsRegistry,
  OperationsRegistryInterface,
} from "../../../../system/contracts/core/OperationsRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
    ],
    name: "OperationAdded",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "actions",
            type: "bytes32[]",
          },
          {
            internalType: "bool[]",
            name: "optional",
            type: "bool[]",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct StoredOperation",
        name: "operation",
        type: "tuple",
      },
    ],
    name: "addOperation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getOperation",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "actions",
        type: "bytes32[]",
      },
      {
        internalType: "bool[]",
        name: "optional",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class OperationsRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): OperationsRegistryInterface {
    return new Interface(_abi) as OperationsRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OperationsRegistry {
    return new Contract(address, _abi, runner) as unknown as OperationsRegistry;
  }
}
