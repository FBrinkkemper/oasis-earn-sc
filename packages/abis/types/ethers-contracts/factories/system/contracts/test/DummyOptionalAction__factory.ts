/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  DummyOptionalAction,
  DummyOptionalActionInterface,
} from "../../../../system/contracts/test/DummyOptionalAction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8[]",
        name: "paramsMap",
        type: "uint8[]",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class DummyOptionalAction__factory {
  static readonly abi = _abi;
  static createInterface(): DummyOptionalActionInterface {
    return new Interface(_abi) as DummyOptionalActionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DummyOptionalAction {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DummyOptionalAction;
  }
}
