/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  DummySwap,
  DummySwapInterface,
} from "../../../../system/contracts/test/DummySwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ServiceRegistry",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_exchange",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class DummySwap__factory {
  static readonly abi = _abi;
  static createInterface(): DummySwapInterface {
    return new Interface(_abi) as DummySwapInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DummySwap {
    return new Contract(address, _abi, runner) as unknown as DummySwap;
  }
}
