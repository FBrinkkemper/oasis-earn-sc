/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  DummyAutomation,
  DummyAutomationInterface,
} from "../../../../system/contracts/test/DummyAutomation";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ServiceRegistry",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "executionData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "opExecutorAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "commandAddress",
        type: "address",
      },
    ],
    name: "doAutomationStuffDelegateCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class DummyAutomation__factory {
  static readonly abi = _abi;
  static createInterface(): DummyAutomationInterface {
    return new Interface(_abi) as DummyAutomationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DummyAutomation {
    return new Contract(address, _abi, runner) as unknown as DummyAutomation;
  }
}
