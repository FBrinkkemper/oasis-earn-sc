/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  DummyCommand,
  DummyCommandInterface,
} from "../../../../system/contracts/test/DummyCommand";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ServiceRegistry",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "executionData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "opExecutorAddress",
        type: "address",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class DummyCommand__factory {
  static readonly abi = _abi;
  static createInterface(): DummyCommandInterface {
    return new utils.Interface(_abi) as DummyCommandInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyCommand {
    return new Contract(address, _abi, signerOrProvider) as DummyCommand;
  }
}
