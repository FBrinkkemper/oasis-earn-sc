/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ChainlinkOracleWrapper,
  ChainlinkOracleWrapperInterface,
} from "../../../../../../system/contracts/morphoblue/wrappers/ChainlinkOracleWrapper.sol/ChainlinkOracleWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "loanTokenAggregator_",
        type: "address",
      },
      {
        internalType: "address",
        name: "debtTokenAggregator_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "aggregatorScalingDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregatorScalingNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "debtTokenAggregator",
    outputs: [
      {
        internalType: "contract IAggregator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loanTokenAggregator",
    outputs: [
      {
        internalType: "contract IAggregator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ChainlinkOracleWrapper__factory {
  static readonly abi = _abi;
  static createInterface(): ChainlinkOracleWrapperInterface {
    return new utils.Interface(_abi) as ChainlinkOracleWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkOracleWrapper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainlinkOracleWrapper;
  }
}
