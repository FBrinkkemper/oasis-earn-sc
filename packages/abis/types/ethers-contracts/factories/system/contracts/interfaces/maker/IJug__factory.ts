/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IJug,
  IJugInterface,
} from "../../../../../system/contracts/interfaces/maker/IJug";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "drip",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "ilks",
    outputs: [
      {
        internalType: "uint256",
        name: "duty",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rho",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IJug__factory {
  static readonly abi = _abi;
  static createInterface(): IJugInterface {
    return new Interface(_abi) as IJugInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IJug {
    return new Contract(address, _abi, runner) as unknown as IJug;
  }
}
