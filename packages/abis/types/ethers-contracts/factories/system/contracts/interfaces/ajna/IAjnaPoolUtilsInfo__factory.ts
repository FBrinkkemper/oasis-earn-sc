/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAjnaPoolUtilsInfo,
  IAjnaPoolUtilsInfoInterface,
} from "../../../../../system/contracts/interfaces/ajna/IAjnaPoolUtilsInfo";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower_",
        type: "address",
      },
    ],
    name: "borrowerInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "debt_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateral_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ajnaPool_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
    ],
    name: "bucketInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteTokens_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateral_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bucketLP_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scale_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRate_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ajnaPool_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lp_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
    ],
    name: "lpToQuoteTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteAmount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ajnaPool_",
        type: "address",
      },
    ],
    name: "poolPricesInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "hpb_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hpbIndex_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "htp_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "htpIndex_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lup_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lupIndex_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "priceToIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class IAjnaPoolUtilsInfo__factory {
  static readonly abi = _abi;
  static createInterface(): IAjnaPoolUtilsInfoInterface {
    return new utils.Interface(_abi) as IAjnaPoolUtilsInfoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAjnaPoolUtilsInfo {
    return new Contract(address, _abi, signerOrProvider) as IAjnaPoolUtilsInfo;
  }
}
