/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IExchange,
  IExchangeInterface,
} from "../../../../system/contracts/interfaces/IExchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receiveAtLeast",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "callee",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "withData",
        type: "bytes",
      },
    ],
    name: "swapDaiForToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receiveAtLeast",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "callee",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "withData",
        type: "bytes",
      },
    ],
    name: "swapTokenForDai",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetFrom",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receiveAtLeast",
        type: "uint256",
      },
    ],
    name: "swapTokenForToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IExchange__factory {
  static readonly abi = _abi;
  static createInterface(): IExchangeInterface {
    return new Interface(_abi) as IExchangeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IExchange {
    return new Contract(address, _abi, runner) as unknown as IExchange;
  }
}
