/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IJoin,
  IJoinInterface,
} from "../../../../../system/contracts/interfaces/maker/IJoin";

const _abi = [
  {
    inputs: [],
    name: "dec",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gem",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ilk",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "join",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IJoin__factory {
  static readonly abi = _abi;
  static createInterface(): IJoinInterface {
    return new Interface(_abi) as IJoinInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IJoin {
    return new Contract(address, _abi, runner) as unknown as IJoin;
  }
}
