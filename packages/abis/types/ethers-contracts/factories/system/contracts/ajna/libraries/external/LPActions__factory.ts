/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  LPActions,
  LPActionsInterface,
} from "../../../../../../system/contracts/ajna/libraries/external/LPActions";

const _abi = [
  {
    inputs: [],
    name: "BucketBankruptcyBlock",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAllowancesInput",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidIndex",
    type: "error",
  },
  {
    inputs: [],
    name: "NoAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToSameOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferorNotApproved",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "transferors",
        type: "address[]",
      },
    ],
    name: "ApproveLPTransferors",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "indexes",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "DecreaseLPAllowance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "indexes",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "IncreaseLPAllowance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "indexes",
        type: "uint256[]",
      },
    ],
    name: "RevokeLPAllowance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "transferors",
        type: "address[]",
      },
    ],
    name: "RevokeLPTransferors",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "indexes",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lp",
        type: "uint256",
      },
    ],
    name: "TransferLP",
    type: "event",
  },
] as const;

export class LPActions__factory {
  static readonly abi = _abi;
  static createInterface(): LPActionsInterface {
    return new Interface(_abi) as LPActionsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LPActions {
    return new Contract(address, _abi, runner) as unknown as LPActions;
  }
}
