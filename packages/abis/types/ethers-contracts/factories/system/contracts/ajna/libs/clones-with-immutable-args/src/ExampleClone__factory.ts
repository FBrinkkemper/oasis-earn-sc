/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ExampleClone,
  ExampleCloneInterface,
} from "../../../../../../../system/contracts/ajna/libs/clones-with-immutable-args/src/ExampleClone";

const _abi = [
  {
    inputs: [],
    name: "param1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "param2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "param3",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "param4",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class ExampleClone__factory {
  static readonly abi = _abi;
  static createInterface(): ExampleCloneInterface {
    return new Interface(_abi) as ExampleCloneInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ExampleClone {
    return new Contract(address, _abi, runner) as unknown as ExampleClone;
  }
}
