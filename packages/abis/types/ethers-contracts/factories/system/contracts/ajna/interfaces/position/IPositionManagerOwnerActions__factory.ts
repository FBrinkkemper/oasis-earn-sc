/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPositionManagerOwnerActions,
  IPositionManagerOwnerActionsInterface,
} from "../../../../../../system/contracts/ajna/interfaces/position/IPositionManagerOwnerActions";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "indexes_",
        type: "uint256[]",
      },
    ],
    name: "memorializePositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "poolSubsetHash_",
        type: "bytes32",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fromIndex_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toIndex_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry_",
        type: "uint256",
      },
    ],
    name: "moveLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "indexes_",
        type: "uint256[]",
      },
    ],
    name: "redeemPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPositionManagerOwnerActions__factory {
  static readonly abi = _abi;
  static createInterface(): IPositionManagerOwnerActionsInterface {
    return new utils.Interface(_abi) as IPositionManagerOwnerActionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPositionManagerOwnerActions {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IPositionManagerOwnerActions;
  }
}
