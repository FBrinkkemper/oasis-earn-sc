/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IERC20PoolEvents,
  IERC20PoolEventsInterface,
} from "../../../../../../../system/contracts/ajna/interfaces/pool/erc20/IERC20PoolEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpAwarded",
        type: "uint256",
      },
    ],
    name: "AddCollateral",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountBorrowed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralPledged",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lup",
        type: "uint256",
      },
    ],
    name: "DrawDebt",
    type: "event",
  },
] as const;

export class IERC20PoolEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IERC20PoolEventsInterface {
    return new utils.Interface(_abi) as IERC20PoolEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IERC20PoolEvents {
    return new Contract(address, _abi, signerOrProvider) as IERC20PoolEvents;
  }
}
