/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ExampleCloneFactory,
  ExampleCloneFactoryInterface,
} from "../../../../../../../system/contracts/ajna/libs/clones-with-immutable-args/src/ExampleCloneFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ExampleClone",
        name: "implementation_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CreateFail",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "param1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "param2",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "param3",
        type: "uint64",
      },
      {
        internalType: "uint8",
        name: "param4",
        type: "uint8",
      },
    ],
    name: "createClone",
    outputs: [
      {
        internalType: "contract ExampleClone",
        name: "clone",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "contract ExampleClone",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ExampleCloneFactory__factory {
  static readonly abi = _abi;
  static createInterface(): ExampleCloneFactoryInterface {
    return new Interface(_abi) as ExampleCloneFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ExampleCloneFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ExampleCloneFactory;
  }
}
