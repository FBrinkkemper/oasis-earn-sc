/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IERC20PoolLenderActions,
  IERC20PoolLenderActionsInterface,
} from "../../../../../../../system/contracts/ajna/interfaces/pool/erc20/IERC20PoolLenderActions";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToAdd_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry_",
        type: "uint256",
      },
    ],
    name: "addCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "bucketLP_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IERC20PoolLenderActions__factory {
  static readonly abi = _abi;
  static createInterface(): IERC20PoolLenderActionsInterface {
    return new utils.Interface(_abi) as IERC20PoolLenderActionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IERC20PoolLenderActions {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IERC20PoolLenderActions;
  }
}
