/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IERC721Taker,
  IERC721TakerInterface,
} from "../../../../../../../system/contracts/ajna/interfaces/pool/erc721/IERC721Taker";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "quoteAmountDue",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "atomicSwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IERC721Taker__factory {
  static readonly abi = _abi;
  static createInterface(): IERC721TakerInterface {
    return new utils.Interface(_abi) as IERC721TakerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IERC721Taker {
    return new Contract(address, _abi, signerOrProvider) as IERC721Taker;
  }
}
