/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  PositionNFTSVG,
  PositionNFTSVGInterface,
} from "../../../../../../system/contracts/ajna/libraries/external/PositionNFTSVG";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "collateralTokenSymbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "quoteTokenSymbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "indexes",
            type: "uint256[]",
          },
        ],
        internalType: "struct PositionNFTSVG.ConstructTokenURIParams",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "constructTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class PositionNFTSVG__factory {
  static readonly abi = _abi;
  static createInterface(): PositionNFTSVGInterface {
    return new Interface(_abi) as PositionNFTSVGInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PositionNFTSVG {
    return new Contract(address, _abi, runner) as unknown as PositionNFTSVG;
  }
}
