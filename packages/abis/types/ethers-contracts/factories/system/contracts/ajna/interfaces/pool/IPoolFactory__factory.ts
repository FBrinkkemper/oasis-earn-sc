/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPoolFactory,
  IPoolFactoryInterface,
} from "../../../../../../system/contracts/ajna/interfaces/pool/IPoolFactory";

const _abi = [
  {
    inputs: [],
    name: "DecimalsNotCompliant",
    type: "error",
  },
  {
    inputs: [],
    name: "DeployQuoteCollateralSameToken",
    type: "error",
  },
  {
    inputs: [],
    name: "DeployWithZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    name: "PoolAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolInterestRateInvalid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
] as const;

export class IPoolFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolFactoryInterface {
    return new Interface(_abi) as IPoolFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPoolFactory {
    return new Contract(address, _abi, runner) as unknown as IPoolFactory;
  }
}
