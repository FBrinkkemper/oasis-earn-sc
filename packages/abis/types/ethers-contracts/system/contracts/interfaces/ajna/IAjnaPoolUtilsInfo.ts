/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../../../common";

export interface IAjnaPoolUtilsInfoInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "borrowerInfo"
      | "lpToQuoteTokens"
      | "poolPricesInfo"
      | "priceToIndex"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "borrowerInfo",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "lpToQuoteTokens",
    values: [AddressLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "poolPricesInfo",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "priceToIndex",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "borrowerInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lpToQuoteTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "poolPricesInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "priceToIndex",
    data: BytesLike
  ): Result;
}

export interface IAjnaPoolUtilsInfo extends BaseContract {
  connect(runner?: ContractRunner | null): IAjnaPoolUtilsInfo;
  waitForDeployment(): Promise<this>;

  interface: IAjnaPoolUtilsInfoInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  borrowerInfo: TypedContractMethod<
    [pool_: AddressLike, borrower_: AddressLike],
    [
      [bigint, bigint, bigint] & {
        debt_: bigint;
        collateral_: bigint;
        index_: bigint;
      }
    ],
    "view"
  >;

  lpToQuoteTokens: TypedContractMethod<
    [ajnaPool_: AddressLike, lp_: BigNumberish, index_: BigNumberish],
    [bigint],
    "view"
  >;

  poolPricesInfo: TypedContractMethod<
    [ajnaPool_: AddressLike],
    [
      [bigint, bigint, bigint, bigint, bigint, bigint] & {
        hpb_: bigint;
        hpbIndex_: bigint;
        htp_: bigint;
        htpIndex_: bigint;
        lup_: bigint;
        lupIndex_: bigint;
      }
    ],
    "view"
  >;

  priceToIndex: TypedContractMethod<[price_: BigNumberish], [bigint], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "borrowerInfo"
  ): TypedContractMethod<
    [pool_: AddressLike, borrower_: AddressLike],
    [
      [bigint, bigint, bigint] & {
        debt_: bigint;
        collateral_: bigint;
        index_: bigint;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "lpToQuoteTokens"
  ): TypedContractMethod<
    [ajnaPool_: AddressLike, lp_: BigNumberish, index_: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "poolPricesInfo"
  ): TypedContractMethod<
    [ajnaPool_: AddressLike],
    [
      [bigint, bigint, bigint, bigint, bigint, bigint] & {
        hpb_: bigint;
        hpbIndex_: bigint;
        htp_: bigint;
        htpIndex_: bigint;
        lup_: bigint;
        lupIndex_: bigint;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "priceToIndex"
  ): TypedContractMethod<[price_: BigNumberish], [bigint], "view">;

  filters: {};
}
