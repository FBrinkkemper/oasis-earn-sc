/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../../../../../common";

export interface IPoolDerivedStateInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "bucketExchangeRate"
      | "depositIndex"
      | "depositScale"
      | "depositSize"
      | "depositUpToIndex"
      | "depositUtilization"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "bucketExchangeRate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositIndex",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositScale",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositSize",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "depositUpToIndex",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositUtilization",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "bucketExchangeRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositScale",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositSize",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositUpToIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositUtilization",
    data: BytesLike
  ): Result;
}

export interface IPoolDerivedState extends BaseContract {
  connect(runner?: ContractRunner | null): IPoolDerivedState;
  waitForDeployment(): Promise<this>;

  interface: IPoolDerivedStateInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  bucketExchangeRate: TypedContractMethod<
    [index_: BigNumberish],
    [bigint],
    "view"
  >;

  depositIndex: TypedContractMethod<[debt_: BigNumberish], [bigint], "view">;

  depositScale: TypedContractMethod<[index_: BigNumberish], [bigint], "view">;

  depositSize: TypedContractMethod<[], [bigint], "view">;

  depositUpToIndex: TypedContractMethod<
    [index_: BigNumberish],
    [bigint],
    "view"
  >;

  depositUtilization: TypedContractMethod<[], [bigint], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "bucketExchangeRate"
  ): TypedContractMethod<[index_: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "depositIndex"
  ): TypedContractMethod<[debt_: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "depositScale"
  ): TypedContractMethod<[index_: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "depositSize"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "depositUpToIndex"
  ): TypedContractMethod<[index_: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "depositUtilization"
  ): TypedContractMethod<[], [bigint], "view">;

  filters: {};
}
