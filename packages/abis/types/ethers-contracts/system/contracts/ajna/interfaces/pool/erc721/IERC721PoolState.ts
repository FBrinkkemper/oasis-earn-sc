/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../../../../../common";

export interface IERC721PoolStateInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "borrowerTokenIds"
      | "bucketTokenIds"
      | "tokenIdsAllowed"
      | "totalBorrowerTokens"
      | "totalBucketTokens"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "borrowerTokenIds",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "bucketTokenIds",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenIdsAllowed",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalBorrowerTokens",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "totalBucketTokens",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "borrowerTokenIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bucketTokenIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenIdsAllowed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalBorrowerTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalBucketTokens",
    data: BytesLike
  ): Result;
}

export interface IERC721PoolState extends BaseContract {
  connect(runner?: ContractRunner | null): IERC721PoolState;
  waitForDeployment(): Promise<this>;

  interface: IERC721PoolStateInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  borrowerTokenIds: TypedContractMethod<
    [borrower: AddressLike, nftIndex: BigNumberish],
    [bigint],
    "view"
  >;

  bucketTokenIds: TypedContractMethod<
    [nftIndex: BigNumberish],
    [bigint],
    "view"
  >;

  tokenIdsAllowed: TypedContractMethod<
    [tokenId: BigNumberish],
    [boolean],
    "view"
  >;

  totalBorrowerTokens: TypedContractMethod<
    [borrower_: AddressLike],
    [bigint],
    "view"
  >;

  totalBucketTokens: TypedContractMethod<[], [bigint], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "borrowerTokenIds"
  ): TypedContractMethod<
    [borrower: AddressLike, nftIndex: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "bucketTokenIds"
  ): TypedContractMethod<[nftIndex: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "tokenIdsAllowed"
  ): TypedContractMethod<[tokenId: BigNumberish], [boolean], "view">;
  getFunction(
    nameOrSignature: "totalBorrowerTokens"
  ): TypedContractMethod<[borrower_: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "totalBucketTokens"
  ): TypedContractMethod<[], [bigint], "view">;

  filters: {};
}
