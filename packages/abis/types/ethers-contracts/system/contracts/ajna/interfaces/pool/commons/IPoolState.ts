/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export interface IPoolStateInterface extends utils.Interface {
  functions: {
    "approvedTransferors(address,address)": FunctionFragment;
    "auctionInfo(address)": FunctionFragment;
    "borrowerInfo(address)": FunctionFragment;
    "bucketInfo(uint256)": FunctionFragment;
    "burnInfo(uint256)": FunctionFragment;
    "currentBurnEpoch()": FunctionFragment;
    "debtInfo()": FunctionFragment;
    "emasInfo()": FunctionFragment;
    "inflatorInfo()": FunctionFragment;
    "interestRateInfo()": FunctionFragment;
    "kickerInfo(address)": FunctionFragment;
    "lenderInfo(uint256,address)": FunctionFragment;
    "loanInfo(uint256)": FunctionFragment;
    "loansInfo()": FunctionFragment;
    "lpAllowance(uint256,address,address)": FunctionFragment;
    "pledgedCollateral()": FunctionFragment;
    "reservesInfo()": FunctionFragment;
    "totalAuctionsInPool()": FunctionFragment;
    "totalT0Debt()": FunctionFragment;
    "totalT0DebtInAuction()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "approvedTransferors"
      | "auctionInfo"
      | "borrowerInfo"
      | "bucketInfo"
      | "burnInfo"
      | "currentBurnEpoch"
      | "debtInfo"
      | "emasInfo"
      | "inflatorInfo"
      | "interestRateInfo"
      | "kickerInfo"
      | "lenderInfo"
      | "loanInfo"
      | "loansInfo"
      | "lpAllowance"
      | "pledgedCollateral"
      | "reservesInfo"
      | "totalAuctionsInPool"
      | "totalT0Debt"
      | "totalT0DebtInAuction"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "approvedTransferors",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "auctionInfo",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "borrowerInfo",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "bucketInfo",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "burnInfo",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "currentBurnEpoch",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "debtInfo", values?: undefined): string;
  encodeFunctionData(functionFragment: "emasInfo", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "inflatorInfo",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "interestRateInfo",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "kickerInfo",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "lenderInfo",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "loanInfo",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(functionFragment: "loansInfo", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "lpAllowance",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "pledgedCollateral",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "reservesInfo",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalAuctionsInPool",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalT0Debt",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalT0DebtInAuction",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "approvedTransferors",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "auctionInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "borrowerInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "bucketInfo", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "burnInfo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "currentBurnEpoch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "debtInfo", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "emasInfo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "inflatorInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "interestRateInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "kickerInfo", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "lenderInfo", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "loanInfo", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "loansInfo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "lpAllowance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pledgedCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "reservesInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalAuctionsInPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalT0Debt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalT0DebtInAuction",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IPoolState extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IPoolStateInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    approvedTransferors(
      lender_: PromiseOrValue<string>,
      transferor_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    auctionInfo(
      borrower_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        string,
        string,
        string
      ] & {
        kicker_: string;
        bondFactor_: BigNumber;
        bondSize_: BigNumber;
        kickTime_: BigNumber;
        referencePrice_: BigNumber;
        neutralPrice_: BigNumber;
        debtToCollateral_: BigNumber;
        head_: string;
        next_: string;
        prev_: string;
      }
    >;

    borrowerInfo(
      borrower_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        t0Debt_: BigNumber;
        collateral_: BigNumber;
        npTpRatio_: BigNumber;
      }
    >;

    bucketInfo(
      index_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        lpAccumulator_: BigNumber;
        availableCollateral_: BigNumber;
        bankruptcyTime_: BigNumber;
        bucketDeposit_: BigNumber;
        bucketScale_: BigNumber;
      }
    >;

    burnInfo(
      burnEventEpoch_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    currentBurnEpoch(overrides?: CallOverrides): Promise<[BigNumber]>;

    debtInfo(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        debt_: BigNumber;
        accruedDebt_: BigNumber;
        debtInAuction_: BigNumber;
        t0Debt2ToCollateral_: BigNumber;
      }
    >;

    emasInfo(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        debtColEma_: BigNumber;
        lupt0DebtEma_: BigNumber;
        debtEma_: BigNumber;
        depositEma_: BigNumber;
      }
    >;

    inflatorInfo(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { inflator_: BigNumber; lastUpdate_: BigNumber }
    >;

    interestRateInfo(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        interestRate_: BigNumber;
        interestRateUpdate_: BigNumber;
      }
    >;

    kickerInfo(
      kicker_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { claimable_: BigNumber; locked_: BigNumber }
    >;

    lenderInfo(
      index_: PromiseOrValue<BigNumberish>,
      lender_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        lpBalance_: BigNumber;
        depositTime_: BigNumber;
      }
    >;

    loanInfo(
      loanId_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber] & {
        borrower_: string;
        t0DebtToCollateral_: BigNumber;
      }
    >;

    loansInfo(
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        maxBorrower_: string;
        maxT0DebtToCollateral_: BigNumber;
        noOfLoans_: BigNumber;
      }
    >;

    lpAllowance(
      index_: PromiseOrValue<BigNumberish>,
      spender_: PromiseOrValue<string>,
      owner_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { allowance_: BigNumber }>;

    pledgedCollateral(overrides?: CallOverrides): Promise<[BigNumber]>;

    reservesInfo(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        liquidationBondEscrowed_: BigNumber;
        reserveAuctionUnclaimed_: BigNumber;
        reserveAuctionKicked_: BigNumber;
        lastKickedReserves_: BigNumber;
        totalInterestEarned_: BigNumber;
      }
    >;

    totalAuctionsInPool(overrides?: CallOverrides): Promise<[BigNumber]>;

    totalT0Debt(overrides?: CallOverrides): Promise<[BigNumber]>;

    totalT0DebtInAuction(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  approvedTransferors(
    lender_: PromiseOrValue<string>,
    transferor_: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  auctionInfo(
    borrower_: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      string,
      string,
      string
    ] & {
      kicker_: string;
      bondFactor_: BigNumber;
      bondSize_: BigNumber;
      kickTime_: BigNumber;
      referencePrice_: BigNumber;
      neutralPrice_: BigNumber;
      debtToCollateral_: BigNumber;
      head_: string;
      next_: string;
      prev_: string;
    }
  >;

  borrowerInfo(
    borrower_: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      t0Debt_: BigNumber;
      collateral_: BigNumber;
      npTpRatio_: BigNumber;
    }
  >;

  bucketInfo(
    index_: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
      lpAccumulator_: BigNumber;
      availableCollateral_: BigNumber;
      bankruptcyTime_: BigNumber;
      bucketDeposit_: BigNumber;
      bucketScale_: BigNumber;
    }
  >;

  burnInfo(
    burnEventEpoch_: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber]>;

  currentBurnEpoch(overrides?: CallOverrides): Promise<BigNumber>;

  debtInfo(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber] & {
      debt_: BigNumber;
      accruedDebt_: BigNumber;
      debtInAuction_: BigNumber;
      t0Debt2ToCollateral_: BigNumber;
    }
  >;

  emasInfo(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber] & {
      debtColEma_: BigNumber;
      lupt0DebtEma_: BigNumber;
      debtEma_: BigNumber;
      depositEma_: BigNumber;
    }
  >;

  inflatorInfo(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { inflator_: BigNumber; lastUpdate_: BigNumber }
  >;

  interestRateInfo(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & {
      interestRate_: BigNumber;
      interestRateUpdate_: BigNumber;
    }
  >;

  kickerInfo(
    kicker_: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { claimable_: BigNumber; locked_: BigNumber }
  >;

  lenderInfo(
    index_: PromiseOrValue<BigNumberish>,
    lender_: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { lpBalance_: BigNumber; depositTime_: BigNumber }
  >;

  loanInfo(
    loanId_: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber] & { borrower_: string; t0DebtToCollateral_: BigNumber }
  >;

  loansInfo(
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, BigNumber] & {
      maxBorrower_: string;
      maxT0DebtToCollateral_: BigNumber;
      noOfLoans_: BigNumber;
    }
  >;

  lpAllowance(
    index_: PromiseOrValue<BigNumberish>,
    spender_: PromiseOrValue<string>,
    owner_: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  pledgedCollateral(overrides?: CallOverrides): Promise<BigNumber>;

  reservesInfo(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
      liquidationBondEscrowed_: BigNumber;
      reserveAuctionUnclaimed_: BigNumber;
      reserveAuctionKicked_: BigNumber;
      lastKickedReserves_: BigNumber;
      totalInterestEarned_: BigNumber;
    }
  >;

  totalAuctionsInPool(overrides?: CallOverrides): Promise<BigNumber>;

  totalT0Debt(overrides?: CallOverrides): Promise<BigNumber>;

  totalT0DebtInAuction(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    approvedTransferors(
      lender_: PromiseOrValue<string>,
      transferor_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    auctionInfo(
      borrower_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        string,
        string,
        string
      ] & {
        kicker_: string;
        bondFactor_: BigNumber;
        bondSize_: BigNumber;
        kickTime_: BigNumber;
        referencePrice_: BigNumber;
        neutralPrice_: BigNumber;
        debtToCollateral_: BigNumber;
        head_: string;
        next_: string;
        prev_: string;
      }
    >;

    borrowerInfo(
      borrower_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        t0Debt_: BigNumber;
        collateral_: BigNumber;
        npTpRatio_: BigNumber;
      }
    >;

    bucketInfo(
      index_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        lpAccumulator_: BigNumber;
        availableCollateral_: BigNumber;
        bankruptcyTime_: BigNumber;
        bucketDeposit_: BigNumber;
        bucketScale_: BigNumber;
      }
    >;

    burnInfo(
      burnEventEpoch_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    currentBurnEpoch(overrides?: CallOverrides): Promise<BigNumber>;

    debtInfo(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        debt_: BigNumber;
        accruedDebt_: BigNumber;
        debtInAuction_: BigNumber;
        t0Debt2ToCollateral_: BigNumber;
      }
    >;

    emasInfo(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        debtColEma_: BigNumber;
        lupt0DebtEma_: BigNumber;
        debtEma_: BigNumber;
        depositEma_: BigNumber;
      }
    >;

    inflatorInfo(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { inflator_: BigNumber; lastUpdate_: BigNumber }
    >;

    interestRateInfo(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        interestRate_: BigNumber;
        interestRateUpdate_: BigNumber;
      }
    >;

    kickerInfo(
      kicker_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { claimable_: BigNumber; locked_: BigNumber }
    >;

    lenderInfo(
      index_: PromiseOrValue<BigNumberish>,
      lender_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        lpBalance_: BigNumber;
        depositTime_: BigNumber;
      }
    >;

    loanInfo(
      loanId_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber] & {
        borrower_: string;
        t0DebtToCollateral_: BigNumber;
      }
    >;

    loansInfo(
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        maxBorrower_: string;
        maxT0DebtToCollateral_: BigNumber;
        noOfLoans_: BigNumber;
      }
    >;

    lpAllowance(
      index_: PromiseOrValue<BigNumberish>,
      spender_: PromiseOrValue<string>,
      owner_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pledgedCollateral(overrides?: CallOverrides): Promise<BigNumber>;

    reservesInfo(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        liquidationBondEscrowed_: BigNumber;
        reserveAuctionUnclaimed_: BigNumber;
        reserveAuctionKicked_: BigNumber;
        lastKickedReserves_: BigNumber;
        totalInterestEarned_: BigNumber;
      }
    >;

    totalAuctionsInPool(overrides?: CallOverrides): Promise<BigNumber>;

    totalT0Debt(overrides?: CallOverrides): Promise<BigNumber>;

    totalT0DebtInAuction(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    approvedTransferors(
      lender_: PromiseOrValue<string>,
      transferor_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    auctionInfo(
      borrower_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    borrowerInfo(
      borrower_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bucketInfo(
      index_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    burnInfo(
      burnEventEpoch_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    currentBurnEpoch(overrides?: CallOverrides): Promise<BigNumber>;

    debtInfo(overrides?: CallOverrides): Promise<BigNumber>;

    emasInfo(overrides?: CallOverrides): Promise<BigNumber>;

    inflatorInfo(overrides?: CallOverrides): Promise<BigNumber>;

    interestRateInfo(overrides?: CallOverrides): Promise<BigNumber>;

    kickerInfo(
      kicker_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lenderInfo(
      index_: PromiseOrValue<BigNumberish>,
      lender_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    loanInfo(
      loanId_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    loansInfo(overrides?: CallOverrides): Promise<BigNumber>;

    lpAllowance(
      index_: PromiseOrValue<BigNumberish>,
      spender_: PromiseOrValue<string>,
      owner_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pledgedCollateral(overrides?: CallOverrides): Promise<BigNumber>;

    reservesInfo(overrides?: CallOverrides): Promise<BigNumber>;

    totalAuctionsInPool(overrides?: CallOverrides): Promise<BigNumber>;

    totalT0Debt(overrides?: CallOverrides): Promise<BigNumber>;

    totalT0DebtInAuction(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    approvedTransferors(
      lender_: PromiseOrValue<string>,
      transferor_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    auctionInfo(
      borrower_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    borrowerInfo(
      borrower_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bucketInfo(
      index_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    burnInfo(
      burnEventEpoch_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    currentBurnEpoch(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    debtInfo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    emasInfo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    inflatorInfo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    interestRateInfo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    kickerInfo(
      kicker_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lenderInfo(
      index_: PromiseOrValue<BigNumberish>,
      lender_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    loanInfo(
      loanId_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    loansInfo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    lpAllowance(
      index_: PromiseOrValue<BigNumberish>,
      spender_: PromiseOrValue<string>,
      owner_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pledgedCollateral(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    reservesInfo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalAuctionsInPool(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalT0Debt(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalT0DebtInAuction(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
